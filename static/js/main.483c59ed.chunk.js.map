{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","cards","setCards","console","log","Card","props","className","alt","style","width","src","avatar_url","name","public_repos","followers","following","location","html_url","href","target","rel","Form","username","setUsername","onSubmit","event","preventDefault","axios","get","then","resp","myRepo","data","type","value","onChange","placeholder","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAkGeA,MA9Ff,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACAC,QAAQC,IAAIH,GAEZ,IAAMI,EAAO,SAACC,GACZ,OACE,8BACa,KAAVL,GACC,sBAAKM,UAAU,OAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBACEC,IAAI,SACJC,MAAO,CAAEC,MAAO,QAChBC,IAAKL,EAAMM,eAIf,qBAAKL,UAAU,OAAf,SACE,4BAAID,EAAMO,SAGZ,qBAAKN,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,iCACE,sCADF,IACgBD,EAAMQ,gBAEtB,iCACE,0CADF,IACoBR,EAAMS,aAE1B,iCACE,0CADF,IACoBT,EAAMU,kBAI9B,sBAAKT,UAAU,WAAf,UACE,6CAEE,iCAASD,EAAMW,cAGjB,oBACET,IAAKF,EAAMY,SACXC,KAAI,UAAKb,EAAMY,UACfE,OAAO,SACPC,IAAI,sBAJN,UAME,iDACCf,EAAMY,SAAU,gBASzBI,EAAO,SAAChB,GACZ,MAAgCN,mBAAS,IAAzC,mBAAOuB,EAAP,KAAiBC,EAAjB,KAYA,OACE,uBAAMjB,UAAU,YAAYkB,SAXT,SAACC,GACpBA,EAAMC,iBAENC,IAAMC,IAAN,uCAA0CN,IAAYO,MAAK,SAACC,GAC1D,IAAMC,EAASD,EAAKE,KACpB/B,EAAS8B,GACTR,EAAY,QAKd,UACE,uBACEjB,UAAU,aACV2B,KAAK,OACLC,MAAOZ,EACPa,SAAU,SAACV,GAAD,OAAWF,EAAYE,EAAMN,OAAOe,QAC9CE,YAAY,kBACZC,UAAQ,IAEV,wBAAQ/B,UAAU,UAAU2B,KAAK,SAAjC,SACE,kDAMR,OACE,sBAAK3B,UAAU,UAAf,UACE,cAACe,EAAD,IACA,cAACjB,EAAD,eAAUJ,QCjFDsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.483c59ed.chunk.js","sourcesContent":["import \"./styles_grid.scss\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [cards, setCards] = useState(\"\");\n  console.log(cards);\n\n  const Card = (props) => {\n    return (\n      <div>\n        {cards !== \"\" && (\n          <div className=\"card\">\n            <div className=\"card-container\">\n              <img\n                alt=\"avatar\"\n                style={{ width: \"10em\" }}\n                src={props.avatar_url}\n              />\n            </div>\n\n            <div className=\"name\">\n              <p>{props.name}</p>\n            </div>\n\n            <div className=\"container\">\n              <div className=\"insideContainer\">\n                <span>\n                  <p>Repos</p> {props.public_repos}\n                </span>\n                <span>\n                  <p>Followers</p> {props.followers}\n                </span>\n                <span>\n                  <p>Following</p> {props.following}\n                </span>\n              </div>\n            </div>\n            <div className=\"location\">\n              <p>\n                &#127968;\n                <strong>{props.location}</strong>\n              </p>\n\n              <a\n                alt={props.html_url}\n                href={`${props.html_url}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <span>&#128279; </span>\n                {props.html_url}{\" \"}\n              </a>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const Form = (props) => {\n    const [username, setUsername] = useState(\"\");\n\n    const handleSubmit = (event) => {\n      event.preventDefault();\n\n      axios.get(`https://api.github.com/users/${username}`).then((resp) => {\n        const myRepo = resp.data;\n        setCards(myRepo);\n        setUsername(\"\");\n      });\n    };\n\n    return (\n      <form className=\"inputForm\" onSubmit={handleSubmit}>\n        <input\n          className=\"form-input\"\n          type=\"text\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n          placeholder=\"GitHub username\"\n          required\n        />\n        <button className=\"Bsubmit\" type=\"submit\">\n          <strong>Search</strong>\n        </button>\n      </form>\n    );\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Form />\n      <Card {...cards} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}